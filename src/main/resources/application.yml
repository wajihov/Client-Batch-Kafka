spring:
  kafka:
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      bootstrap-servers: localhost:9092
    consumer:
      group-id: myGroup
      auto-offset-reset: earliest
      bootstrap-servers: localhost:9092
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: '*'
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5Dialect
        format_sql: 'true'
    hibernate:
      ddl-auto: update
    show-sql: 'true'
  batch:
    jdbc:
      initialize-schema: always
    job:
      enabled: 'true'
  datasource:
    password: ''
    driver-class-name: com.mysql.jdbc.Driver
    username: root
    url: jdbc:mysql://localhost:3306/wikimedia?createDatabaseIfNotExist=true&useSSL=false
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    shutdown:
      enabled: 'true'
endpoints:
  shutdown:
    enabled: 'true'
inputFile: data.csv
server:
  port: '8081'